{
  "address": "0xDCe687A71a252a6FF958d1b5FB4e25A355ea40e8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4074495fc9504ec48969451b6d49245add2126e9b9330faf322d59aca43f93f0",
  "receipt": {
    "to": null,
    "from": "0x0974Dd7e2a134ee8a0A47D3B8d2603B7198212c0",
    "contractAddress": "0xDCe687A71a252a6FF958d1b5FB4e25A355ea40e8",
    "transactionIndex": 11,
    "gasUsed": "855615",
    "logsBloom": "0x
    "blockHash": "0xb5be58fad370a7c74c1e18e7a19a3c9f19e0be6085446ea4966fd4efd4ae84fd",
    "transactionHash": "0x4074495fc9504ec48969451b6d49245add2126e9b9330faf322d59aca43f93f0",
    "logs": [],
    "blockNumber": 10906666,
    "cumulativeGasUsed": "2903197",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "47cb51219bcdbfc121bd35b6177d2eb0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"Fundme\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract Fundme {\\n    using PriceConverter for uint256;\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        priceFeed =  AggregatorV3Interface(priceFeedAddress);\\n        i_owner = msg.sender;\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough eth\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n\\n        // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        //send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess,\\\"Send Failed\\\");\\n\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        //  require(msg.sender == i_owner,\\\"Sender is not owner!\\\");\\n        if (msg.sender == i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xebac575bf553ec72b2c3dd38bfabcd540d5540e4206a9c6a25845d1b7690c8af\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n       \\r\\n        (, int price, , , ) = priceFeed.latestRoundData();\\r\\n        // price => Eth in terms of USD\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6cc339f01e1c5721d408fac50376c3ef70bbcc45b566a6930183c396d91fd3c8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f7e380380610f7e83398181016040528101906100329190610113565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e19610165600039600081816102d401526105600152610e196000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a7565b610513565b6040516100d891906107ed565b60405180910390f35b3480156100ed57600080fd5b506100f661052b565b60405161010391906107ed565b60405180910390f35b34801561011857600080fd5b50610121610538565b60405161012e9190610867565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055e565b6040516101639190610891565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d8565b610582565b6040516101a09190610891565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c190919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610962565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610358576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040357600080828154811061037d5761037c610982565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fb906109e0565b91505061035b565b50600067ffffffffffffffff81111561041f5761041e610a29565b5b60405190808252806020026020018201604052801561044d5781602001602082028036833780820191505090505b506000908051906020019061046392919061069d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048a90610a89565b60006040518083038185875af1925050503d80600081146104c7576040519150601f19603f3d011682016040523d82523d6000602084013e6104cc565b606091505b5050905080610510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050790610aea565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cd836105fd565b90506000670de0b6b3a764000085836105e69190610b0a565b6105f09190610b93565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064657600080fd5b505afa15801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e9190610c51565b5050509150506402540be400816106959190610ccc565b915050919050565b828054828255906000526020600020908101928215610716579160200282015b828111156107155782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bd565b5b5090506107239190610727565b5090565b5b80821115610740576000816000905550600101610728565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077482610749565b9050919050565b61078481610769565b811461078f57600080fd5b50565b6000813590506107a18161077b565b92915050565b6000602082840312156107bd576107bc610744565b5b60006107cb84828501610792565b91505092915050565b6000819050919050565b6107e7816107d4565b82525050565b600060208201905061080260008301846107de565b92915050565b6000819050919050565b600061082d61082861082384610749565b610808565b610749565b9050919050565b600061083f82610812565b9050919050565b600061085182610834565b9050919050565b61086181610846565b82525050565b600060208201905061087c6000830184610858565b92915050565b61088b81610769565b82525050565b60006020820190506108a66000830184610882565b92915050565b6108b5816107d4565b81146108c057600080fd5b50565b6000813590506108d2816108ac565b92915050565b6000602082840312156108ee576108ed610744565b5b60006108fc848285016108c3565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746800000000000000000000600082015250565b600061094c601683610905565b915061095782610916565b602082019050919050565b6000602082019050818103600083015261097b8161093f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109eb826107d4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1e57610a1d6109b1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a73600083610a58565b9150610a7e82610a63565b600082019050919050565b6000610a9482610a66565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad4600b83610905565b9150610adf82610a9e565b602082019050919050565b60006020820190508181036000830152610b0381610ac7565b9050919050565b6000610b15826107d4565b9150610b20836107d4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5957610b586109b1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9e826107d4565b9150610ba9836107d4565b925082610bb957610bb8610b64565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be381610bc4565b8114610bee57600080fd5b50565b600081519050610c0081610bda565b92915050565b6000819050919050565b610c1981610c06565b8114610c2457600080fd5b50565b600081519050610c3681610c10565b92915050565b600081519050610c4b816108ac565b92915050565b600080600080600060a08688031215610c6d57610c6c610744565b5b6000610c7b88828901610bf1565b9550506020610c8c88828901610c27565b9450506040610c9d88828901610c3c565b9350506060610cae88828901610c3c565b9250506080610cbf88828901610bf1565b9150509295509295909350565b6000610cd782610c06565b9150610ce283610c06565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d2157610d206109b1565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5e57610d5d6109b1565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9b57610d9a6109b1565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd857610dd76109b1565b5b82820290509291505056fea26469706673582212203f16f94bc15aedb131c9657232a9c7c13c25ee5c96a158c34a8a230ee34bc4fc64736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102d2565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107a7565b610513565b6040516100d891906107ed565b60405180910390f35b3480156100ed57600080fd5b506100f661052b565b60405161010391906107ed565b60405180910390f35b34801561011857600080fd5b50610121610538565b60405161012e9190610867565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661055e565b6040516101639190610891565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108d8565b610582565b6040516101a09190610891565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105c190919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610962565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610358576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561040357600080828154811061037d5761037c610982565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103fb906109e0565b91505061035b565b50600067ffffffffffffffff81111561041f5761041e610a29565b5b60405190808252806020026020018201604052801561044d5781602001602082028036833780820191505090505b506000908051906020019061046392919061069d565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048a90610a89565b60006040518083038185875af1925050503d80600081146104c7576040519150601f19603f3d011682016040523d82523d6000602084013e6104cc565b606091505b5050905080610510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050790610aea565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061059257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105cd836105fd565b90506000670de0b6b3a764000085836105e69190610b0a565b6105f09190610b93565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561064657600080fd5b505afa15801561065a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067e9190610c51565b5050509150506402540be400816106959190610ccc565b915050919050565b828054828255906000526020600020908101928215610716579160200282015b828111156107155782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106bd565b5b5090506107239190610727565b5090565b5b80821115610740576000816000905550600101610728565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061077482610749565b9050919050565b61078481610769565b811461078f57600080fd5b50565b6000813590506107a18161077b565b92915050565b6000602082840312156107bd576107bc610744565b5b60006107cb84828501610792565b91505092915050565b6000819050919050565b6107e7816107d4565b82525050565b600060208201905061080260008301846107de565b92915050565b6000819050919050565b600061082d61082861082384610749565b610808565b610749565b9050919050565b600061083f82610812565b9050919050565b600061085182610834565b9050919050565b61086181610846565b82525050565b600060208201905061087c6000830184610858565b92915050565b61088b81610769565b82525050565b60006020820190506108a66000830184610882565b92915050565b6108b5816107d4565b81146108c057600080fd5b50565b6000813590506108d2816108ac565b92915050565b6000602082840312156108ee576108ed610744565b5b60006108fc848285016108c3565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746800000000000000000000600082015250565b600061094c601683610905565b915061095782610916565b602082019050919050565b6000602082019050818103600083015261097b8161093f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109eb826107d4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a1e57610a1d6109b1565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a73600083610a58565b9150610a7e82610a63565b600082019050919050565b6000610a9482610a66565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610ad4600b83610905565b9150610adf82610a9e565b602082019050919050565b60006020820190508181036000830152610b0381610ac7565b9050919050565b6000610b15826107d4565b9150610b20836107d4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b5957610b586109b1565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b9e826107d4565b9150610ba9836107d4565b925082610bb957610bb8610b64565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610be381610bc4565b8114610bee57600080fd5b50565b600081519050610c0081610bda565b92915050565b6000819050919050565b610c1981610c06565b8114610c2457600080fd5b50565b600081519050610c3681610c10565b92915050565b600081519050610c4b816108ac565b92915050565b600080600080600060a08688031215610c6d57610c6c610744565b5b6000610c7b88828901610bf1565b9550506020610c8c88828901610c27565b9450506040610c9d88828901610c3c565b9350506060610cae88828901610c3c565b9250506080610cbf88828901610bf1565b9150509295509295909350565b6000610cd782610c06565b9150610ce283610c06565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d2157610d206109b1565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d5e57610d5d6109b1565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610d9b57610d9a6109b1565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610dd857610dd76109b1565b5b82820290509291505056fea26469706673582212203f16f94bc15aedb131c9657232a9c7c13c25ee5c96a158c34a8a230ee34bc4fc64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}