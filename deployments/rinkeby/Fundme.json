{
  "address": "0xA3C1B5f7f06260a69A4870276b362763943bD819",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Fundme__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0125dc62a5f0bb4a0ea300653481c65aff4153ee24016b27b31bbee8d06463fd",
  "receipt": {
    "to": null,
    "from": "0x0974Dd7e2a134ee8a0A47D3B8d2603B7198212c0",
    "contractAddress": "0xA3C1B5f7f06260a69A4870276b362763943bD819",
    "transactionIndex": 21,
    "gasUsed": "1025356",
    "logsBloom": "0x
    "blockHash": "0xa5b5801d6534c843dd9129682b6bf773da607a6218f785023c490e43df6d2d39",
    "transactionHash": "0x0125dc62a5f0bb4a0ea300653481c65aff4153ee24016b27b31bbee8d06463fd",
    "logs": [],
    "blockNumber": 10924766,
    "cumulativeGasUsed": "4344129",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 5,
  "solcInputHash": "67f3bb4da9c3efd6e0345c41d4c83fff",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Fundme__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Fundme.sol\":\"Fundme\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/Fundme.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror Fundme__NotOwner();\\n\\ncontract Fundme {\\n    using PriceConverter for uint256;\\n    uint256 public constant MINIMUM_USD = 10 * 1e18;\\n\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        //  require(msg.sender == i_owner,\\\"Sender is not owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert Fundme__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n        i_owner = msg.sender;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't send enough eth\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        //send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess,\\\"Send Failed\\\");\\n\\n        //call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x66a057d5bb0e6b77ef120fa807d5044609911285f9c7f1b5d68495669d1a7c7f\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n       \\r\\n        (, int price, , , ) = priceFeed.latestRoundData();\\r\\n        // price => Eth in terms of USD\\r\\n        return uint256(price * 1e10);\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6cc339f01e1c5721d408fac50376c3ef70bbcc45b566a6930183c396d91fd3c8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012b6380380620012b6833981810160405281019062000037919062000120565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61113062000186600039600081816103310152818161057f015281816105cf01526107c501526111306000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610abe565b6102e6565b6040516100cc9190610b04565b60405180910390f35b3480156100e157600080fd5b506100ea61032f565b005b3480156100f857600080fd5b5061010161056f565b60405161010e9190610b04565b60405180910390f35b34801561012357600080fd5b5061012c61057b565b6040516101399190610b2e565b60405180910390f35b34801561014e57600080fd5b506101576105a3565b6040516101649190610ba8565b60405180910390f35b6101756101be565b005b61017f6105cd565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bef565b610891565b6040516101b59190610b2e565b60405180910390f35b678ac7230489e800006101fc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108d890919063ffffffff16565b101561023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610c79565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b4576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561045f5760008082815481106103d9576103d8610c99565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045790610cf7565b9150506103b7565b50600067ffffffffffffffff81111561047b5761047a610d40565b5b6040519080825280602002602001820160405280156104a95781602001602082028036833780820191505090505b50600090805190602001906104bf9291906109b4565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e690610da0565b60006040518083038185875af1925050503d8060008114610523576040519150601f19603f3d011682016040523d82523d6000602084013e610528565b606091505b505090508061056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390610e01565b60405180910390fd5b50565b678ac7230489e8000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610652576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068b575b5050505050905060005b81518110156107605760008282815181106106fd576106fc610c99565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075890610cf7565b9150506106df565b50600067ffffffffffffffff81111561077c5761077b610d40565b5b6040519080825280602002602001820160405280156107aa5781602001602082028036833780820191505090505b50600090805190602001906107c09291906109b4565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080790610da0565b60006040518083038185875af1925050503d8060008114610844576040519150601f19603f3d011682016040523d82523d6000602084013e610849565b606091505b505090508061088d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088490610e01565b60405180910390fd5b5050565b60008082815481106108a6576108a5610c99565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108e483610914565b90506000670de0b6b3a764000085836108fd9190610e21565b6109079190610eaa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095d57600080fd5b505afa158015610971573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109959190610f68565b5050509150506402540be400816109ac9190610fe3565b915050919050565b828054828255906000526020600020908101928215610a2d579160200282015b82811115610a2c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109d4565b5b509050610a3a9190610a3e565b5090565b5b80821115610a57576000816000905550600101610a3f565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8b82610a60565b9050919050565b610a9b81610a80565b8114610aa657600080fd5b50565b600081359050610ab881610a92565b92915050565b600060208284031215610ad457610ad3610a5b565b5b6000610ae284828501610aa9565b91505092915050565b6000819050919050565b610afe81610aeb565b82525050565b6000602082019050610b196000830184610af5565b92915050565b610b2881610a80565b82525050565b6000602082019050610b436000830184610b1f565b92915050565b6000819050919050565b6000610b6e610b69610b6484610a60565b610b49565b610a60565b9050919050565b6000610b8082610b53565b9050919050565b6000610b9282610b75565b9050919050565b610ba281610b87565b82525050565b6000602082019050610bbd6000830184610b99565b92915050565b610bcc81610aeb565b8114610bd757600080fd5b50565b600081359050610be981610bc3565b92915050565b600060208284031215610c0557610c04610a5b565b5b6000610c1384828501610bda565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746800000000000000000000600082015250565b6000610c63601683610c1c565b9150610c6e82610c2d565b602082019050919050565b60006020820190508181036000830152610c9281610c56565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d0282610aeb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d3557610d34610cc8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d8a600083610d6f565b9150610d9582610d7a565b600082019050919050565b6000610dab82610d7d565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610deb600b83610c1c565b9150610df682610db5565b602082019050919050565b60006020820190508181036000830152610e1a81610dde565b9050919050565b6000610e2c82610aeb565b9150610e3783610aeb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e7057610e6f610cc8565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eb582610aeb565b9150610ec083610aeb565b925082610ed057610ecf610e7b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610efa81610edb565b8114610f0557600080fd5b50565b600081519050610f1781610ef1565b92915050565b6000819050919050565b610f3081610f1d565b8114610f3b57600080fd5b50565b600081519050610f4d81610f27565b92915050565b600081519050610f6281610bc3565b92915050565b600080600080600060a08688031215610f8457610f83610a5b565b5b6000610f9288828901610f08565b9550506020610fa388828901610f3e565b9450506040610fb488828901610f53565b9350506060610fc588828901610f53565b9250506080610fd688828901610f08565b9150509295509295909350565b6000610fee82610f1d565b9150610ff983610f1d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561103857611037610cc8565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561107557611074610cc8565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110b2576110b1610cc8565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110ef576110ee610cc8565b5b82820290509291505056fea264697066735822122010c381d34c8be64b14a40a092618decbd9d839488f8e33ba8845a5e76d479def64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610abe565b6102e6565b6040516100cc9190610b04565b60405180910390f35b3480156100e157600080fd5b506100ea61032f565b005b3480156100f857600080fd5b5061010161056f565b60405161010e9190610b04565b60405180910390f35b34801561012357600080fd5b5061012c61057b565b6040516101399190610b2e565b60405180910390f35b34801561014e57600080fd5b506101576105a3565b6040516101649190610ba8565b60405180910390f35b6101756101be565b005b61017f6105cd565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bef565b610891565b6040516101b59190610b2e565b60405180910390f35b678ac7230489e800006101fc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108d890919063ffffffff16565b101561023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610c79565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b4576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561045f5760008082815481106103d9576103d8610c99565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045790610cf7565b9150506103b7565b50600067ffffffffffffffff81111561047b5761047a610d40565b5b6040519080825280602002602001820160405280156104a95781602001602082028036833780820191505090505b50600090805190602001906104bf9291906109b4565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e690610da0565b60006040518083038185875af1925050503d8060008114610523576040519150601f19603f3d011682016040523d82523d6000602084013e610528565b606091505b505090508061056c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056390610e01565b60405180910390fd5b50565b678ac7230489e8000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610652576040517f85db10ab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068b575b5050505050905060005b81518110156107605760008282815181106106fd576106fc610c99565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075890610cf7565b9150506106df565b50600067ffffffffffffffff81111561077c5761077b610d40565b5b6040519080825280602002602001820160405280156107aa5781602001602082028036833780820191505090505b50600090805190602001906107c09291906109b4565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080790610da0565b60006040518083038185875af1925050503d8060008114610844576040519150601f19603f3d011682016040523d82523d6000602084013e610849565b606091505b505090508061088d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088490610e01565b60405180910390fd5b5050565b60008082815481106108a6576108a5610c99565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108e483610914565b90506000670de0b6b3a764000085836108fd9190610e21565b6109079190610eaa565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561095d57600080fd5b505afa158015610971573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109959190610f68565b5050509150506402540be400816109ac9190610fe3565b915050919050565b828054828255906000526020600020908101928215610a2d579160200282015b82811115610a2c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109d4565b5b509050610a3a9190610a3e565b5090565b5b80821115610a57576000816000905550600101610a3f565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8b82610a60565b9050919050565b610a9b81610a80565b8114610aa657600080fd5b50565b600081359050610ab881610a92565b92915050565b600060208284031215610ad457610ad3610a5b565b5b6000610ae284828501610aa9565b91505092915050565b6000819050919050565b610afe81610aeb565b82525050565b6000602082019050610b196000830184610af5565b92915050565b610b2881610a80565b82525050565b6000602082019050610b436000830184610b1f565b92915050565b6000819050919050565b6000610b6e610b69610b6484610a60565b610b49565b610a60565b9050919050565b6000610b8082610b53565b9050919050565b6000610b9282610b75565b9050919050565b610ba281610b87565b82525050565b6000602082019050610bbd6000830184610b99565b92915050565b610bcc81610aeb565b8114610bd757600080fd5b50565b600081359050610be981610bc3565b92915050565b600060208284031215610c0557610c04610a5b565b5b6000610c1384828501610bda565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746800000000000000000000600082015250565b6000610c63601683610c1c565b9150610c6e82610c2d565b602082019050919050565b60006020820190508181036000830152610c9281610c56565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d0282610aeb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d3557610d34610cc8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d8a600083610d6f565b9150610d9582610d7a565b600082019050919050565b6000610dab82610d7d565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610deb600b83610c1c565b9150610df682610db5565b602082019050919050565b60006020820190508181036000830152610e1a81610dde565b9050919050565b6000610e2c82610aeb565b9150610e3783610aeb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e7057610e6f610cc8565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610eb582610aeb565b9150610ec083610aeb565b925082610ed057610ecf610e7b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610efa81610edb565b8114610f0557600080fd5b50565b600081519050610f1781610ef1565b92915050565b6000819050919050565b610f3081610f1d565b8114610f3b57600080fd5b50565b600081519050610f4d81610f27565b92915050565b600081519050610f6281610bc3565b92915050565b600080600080600060a08688031215610f8457610f83610a5b565b5b6000610f9288828901610f08565b9550506020610fa388828901610f3e565b9450506040610fb488828901610f53565b9350506060610fc588828901610f53565b9250506080610fd688828901610f08565b9150509295509295909350565b6000610fee82610f1d565b9150610ff983610f1d565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561103857611037610cc8565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561107557611074610cc8565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156110b2576110b1610cc8565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110ef576110ee610cc8565b5b82820290509291505056fea264697066735822122010c381d34c8be64b14a40a092618decbd9d839488f8e33ba8845a5e76d479def64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/Fundme.sol:Fundme",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}